name: PR guard

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      issues: write
    steps:
      - uses: actions/checkout@v4

      - name: Detect changes
        id: diff
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          gh pr view ${{ github.event.pull_request.number }} --json files \
            -q '.files[].path' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Guard scan & react
        uses: actions/github-script@v7
        with:
          script: |
            const fs   = require('fs')
            const core = require('@actions/core')

            const changed = core.getInput('files').split('\n')
            const rules   = JSON.parse(fs.readFileSync('temple-core/guard-rules.json','utf8'))

            for (const key in rules) {
              const r = rules[key]
              if (changed.some(f => r.paths.some(p => f === p))) {
                // add label
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo:  context.repo.repo,
                  issue_number: context.issue.number,
                  labels: [r.label]
                })

                // post comment
                const message = `${r.message}\n\nReviewer ping: ${r.ping.join(' ')}`
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo:  context.repo.repo,
                  issue_number: context.issue.number,
                  body: message
                })
              }
            }
